// <auto-generated />
using System;
using Chess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chess.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Black")
                        .HasColumnType("int");

                    b.Property<string>("BlackConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Board")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentPlayer")
                        .HasColumnType("int");

                    b.Property<bool>("IsPlaying")
                        .HasColumnType("bit");

                    b.Property<int?>("White")
                        .HasColumnType("int");

                    b.Property<string>("WhiteConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chess_Mvc_Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Board = ",",
                            IsPlaying = false
                        },
                        new
                        {
                            Id = 2,
                            Board = ",",
                            IsPlaying = false
                        });
                });

            modelBuilder.Entity("Chess.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AtGame")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("gameId")
                        .HasColumnType("int");

                    b.Property<bool?>("isWhite")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Chess_Mvc_Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AtGame = false,
                            Email = "example@email.com",
                            Name = "Tim",
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            AtGame = false,
                            Email = "example@email.com",
                            Name = "George",
                            Password = "123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
